[{"D:\\Gomip\\project\\ElectronJs\\src\\reportWebVitals.ts":"1","D:\\Gomip\\project\\ElectronJs\\src\\pages\\Create\\Create.tsx":"2","D:\\Gomip\\project\\ElectronJs\\src\\COM\\DataCard.tsx":"3","D:\\Gomip\\project\\ElectronJs\\src\\COM\\DataRow.tsx":"4","D:\\Gomip\\project\\ElectronJs\\src\\COM\\Sidebar.tsx":"5","D:\\Gomip\\project\\ElectronJs\\src\\index.tsx":"6","D:\\Gomip\\project\\ElectronJs\\src\\COM\\SidebarData.tsx":"7","D:\\Gomip\\project\\ElectronJs\\src\\COM\\RadioFilterItem.tsx":"8","D:\\Gomip\\project\\ElectronJs\\src\\COM\\DataTable.tsx":"9","D:\\Gomip\\project\\ElectronJs\\src\\App.tsx":"10","D:\\Gomip\\project\\ElectronJs\\src\\pages\\Home.tsx":"11","D:\\Gomip\\project\\ElectronJs\\src\\pages\\Exam\\Exam.tsx":"12","D:\\Gomip\\project\\ElectronJs\\src\\pages\\Exam\\Solve.tsx":"13","D:\\Gomip\\project\\ElectronJs\\src\\pages\\Exam\\ErrorModal.tsx":"14","D:\\Gomip\\project\\ElectronJs\\src\\pages\\Exam\\Answer.tsx":"15","D:\\Gomip\\project\\ElectronJs\\src\\pages\\Exam\\RadioBox.tsx":"16","D:\\Gomip\\project\\ElectronJs\\src\\pages\\Report\\Report.tsx":"17","D:\\Gomip\\project\\ElectronJs\\src\\pages\\Create\\Quiz.tsx":"18","D:\\Gomip\\project\\ElectronJs\\src\\pages\\Exam\\AnswerTable.tsx":"19","D:\\Gomip\\project\\ElectronJs\\src\\COM\\style\\Pagination.tsx":"20"},{"size":440,"mtime":1608004381543,"results":"21","hashOfConfig":"22"},{"size":19778,"mtime":1609085314464,"results":"23","hashOfConfig":"22"},{"size":2816,"mtime":1608626634597,"results":"24","hashOfConfig":"22"},{"size":1291,"mtime":1608043623061,"results":"25","hashOfConfig":"22"},{"size":2857,"mtime":1608650615392,"results":"26","hashOfConfig":"22"},{"size":517,"mtime":1608004381541,"results":"27","hashOfConfig":"22"},{"size":648,"mtime":1609145645778,"results":"28","hashOfConfig":"22"},{"size":2362,"mtime":1608643031946,"results":"29","hashOfConfig":"22"},{"size":2094,"mtime":1609320506963,"results":"30","hashOfConfig":"22"},{"size":1921,"mtime":1609323977144,"results":"31","hashOfConfig":"22"},{"size":1385,"mtime":1608004381542,"results":"32","hashOfConfig":"22"},{"size":4569,"mtime":1609006759218,"results":"33","hashOfConfig":"22"},{"size":4675,"mtime":1609323250854,"results":"34","hashOfConfig":"22"},{"size":1187,"mtime":1609004853814,"results":"35","hashOfConfig":"22"},{"size":7951,"mtime":1609144908671,"results":"36","hashOfConfig":"22"},{"size":2016,"mtime":1609140222729,"results":"37","hashOfConfig":"22"},{"size":706,"mtime":1608004381542,"results":"38","hashOfConfig":"22"},{"size":18864,"mtime":1609147589401,"results":"39","hashOfConfig":"22"},{"size":5179,"mtime":1609143738381,"results":"40","hashOfConfig":"22"},{"size":1524,"mtime":1608778257042,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"15hfed4",{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":3,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Gomip\\project\\ElectronJs\\src\\reportWebVitals.ts",[],["92","93"],"D:\\Gomip\\project\\ElectronJs\\src\\pages\\Create\\Create.tsx",["94","95","96","97","98","99","100"],"D:\\Gomip\\project\\ElectronJs\\src\\COM\\DataCard.tsx",["101","102","103"],"import * as React from 'react'\r\nimport {Button, Card, Col} from 'react-bootstrap'\r\nimport {Pagination} from \"./Pagination\";\r\n\r\n/**\r\n * 2020.12.13 | gomip | created\r\n * 2020.12.22 | gomip | 페이징 처리\r\n * @constructor\r\n */\r\n\r\nexport interface DataCardProps{\r\n  header: JSX.Element\r\n  total: number                                                                                                         // 리스트 크기\r\n  pageSize: number                                                                                                      // 보여주는 갯수\r\n  pageNum: number                                                                                                       // 현재 위치\r\n  isFooterUse?: boolean\r\n  handlePageNum?: (num: number) => void\r\n}\r\n\r\nexport const DataCard: React.FC<DataCardProps> = (props) => {\r\n  // State -------------------------------------------------------------------------------------------------------------\r\n  const {total, pageSize, pageNum, handlePageNum} = props\r\n  let pageCount = 5\r\n  const totalPage = Math.ceil(total / pageSize)                                                                       // 총 페이지 수\r\n  const pageGroup = Math.ceil(pageNum / pageCount)                                                                    // 페이지 그룹\r\n\r\n  let last = pageGroup * pageCount                                                                                      // 화면에 보여질 마지막 페이지 번호\r\n  if (last > totalPage) {\r\n      last = totalPage\r\n  }\r\n  let first = last - (pageCount -1)\r\n  const next = last + 1\r\n  const prev = first - 1\r\n\r\n  if (totalPage < 1) {\r\n      first = last\r\n  }\r\n\r\n  // Function ----------------------------------------------------------------------------------------------------------\r\n\r\n  // Dom ---------------------------------------------------------------------------------------------------------------\r\n  return (\r\n    <Card className='height-100'>\r\n      {/* 카드 : 헤더 시작 */}\r\n      <Card.Header style={{height: '15%'}}>\r\n        <Col>{props.header}</Col>\r\n      </Card.Header>\r\n      {/* 카드 : 헤더 끝 */}\r\n\r\n      {/* 카드 : 바디 시작 */}\r\n      <Card.Body style={{height: '30%'}}>\r\n        {props.children}\r\n      </Card.Body>\r\n      {/* 카드 : 바디 끝 */}\r\n\r\n      {/* 카드 : 푸터 시작 */}\r\n        {props.isFooterUse ?\r\n            (\r\n                <Card.Footer style={{height: '50px'}} className='card-page'>\r\n                    <Pagination\r\n                        total={props.total}\r\n                        pageSize={10}\r\n                        pageNum={pageNum}\r\n                        handlePageNum={handlePageNum!}\r\n                    />\r\n                </Card.Footer>\r\n            ) : null\r\n        }\r\n    </Card>\r\n  )\r\n}\r\n",["104","105"],"D:\\Gomip\\project\\ElectronJs\\src\\COM\\DataRow.tsx",[],"D:\\Gomip\\project\\ElectronJs\\src\\COM\\Sidebar.tsx",[],["106","107"],"D:\\Gomip\\project\\ElectronJs\\src\\index.tsx",[],"D:\\Gomip\\project\\ElectronJs\\src\\COM\\SidebarData.tsx",["108","109"],"D:\\Gomip\\project\\ElectronJs\\src\\COM\\RadioFilterItem.tsx",[],["110","111"],"D:\\Gomip\\project\\ElectronJs\\src\\COM\\DataTable.tsx",["112","113"],"D:\\Gomip\\project\\ElectronJs\\src\\App.tsx",["114","115","116"],"D:\\Gomip\\project\\ElectronJs\\src\\pages\\Home.tsx",[],["117","118"],"D:\\Gomip\\project\\ElectronJs\\src\\pages\\Exam\\Exam.tsx",["119","120","121"],"import * as React from 'react'\r\nimport '../style/Exam.css'\r\nimport {Button, Form, Modal} from \"react-bootstrap\"\r\nimport {useHistory} from 'react-router-dom'\r\nimport {ErrorModal} from \"./ErrorModal\";\r\n\r\n/**\r\n *  2020.12.26 | gomip | created\r\n */\r\n\r\nconst {useState} = React\r\nexport interface TestProps {\r\n    showName: boolean\r\n}\r\n\r\ninterface StudentInfo {\r\n    studentId: string,\r\n    studentName: string,\r\n}\r\n\r\ninterface ExamFile {\r\n    file: Blob,\r\n}\r\n\r\nexport const Exam: React.FC<TestProps> = (props) => {\r\n    // State -----------------------------------------------------------------------------------------------------------\r\n    const {showName} = props\r\n    const [student, setStudent] = useState<StudentInfo>({\r\n        studentId: '',\r\n        studentName: '',\r\n    })\r\n    const [exam, setExam] = useState<ExamFile>({\r\n        file: new Blob()\r\n    })\r\n\r\n    const [show, setShow] = useState(false)\r\n    const [category, setCategory] = useState('')\r\n\r\n    const history = useHistory()\r\n    // Function --------------------------------------------------------------------------------------------------------\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {                                           // 우측 필터 값 변경\r\n        const {name, value} = e.currentTarget\r\n        student[name as keyof StudentInfo] = value\r\n        setStudent({...student})\r\n        console.log('name', name, 'value', value)\r\n    }\r\n\r\n    const handleRedirect = () => {\r\n        if (student.studentId === '') {                                                                                 // 학생 아이디가 입력되지 않았다면\r\n            handleOpen()\r\n            setCategory('학생 ID')\r\n        } else if (student.studentName === ''){                                                                         // 학생 이름이 입력되지 않았다면\r\n            handleOpen()\r\n            setCategory('학생 이름')\r\n        // } else if (student.filePath === '') {                                                                           // 파일이 선택되지 않았다면\r\n        //     handleOpen()\r\n        //     setCategory('시험지')\r\n        } else {\r\n            return history.push({\r\n                pathname: '/solve',\r\n                state:{student: student}\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleOpen = () => setShow(true)\r\n    const handleClose = () => setShow(false)\r\n\r\n    // Dom -------------------------------------------------------------------------------------------------------------\r\n    return (\r\n        <div className={showName ? 'body-pd exam-info' : 'exam-info'}>\r\n            {/* 로그인 정보 시작 */}\r\n                <Form className='login-form'>\r\n                    <div className='login-card-title'>\r\n                        <span>정보 입력</span>\r\n                    </div>\r\n                    {/* 아이디 입력 시작 */}\r\n                    <div className='login-info mt-2'>\r\n                        <Form.Group>\r\n                            <Form.Label>학생 ID</Form.Label>\r\n                            <Form.Control type='text' placeholder='학생 아이디를 입력해주세요' onChange={handleChange} name='studentId' />\r\n                        </Form.Group>\r\n                        {/* 아이디 입력 끝 */}\r\n\r\n                        {/* 이름 입력 시작 */}\r\n                        <Form.Group>\r\n                            <Form.Label>이름</Form.Label>\r\n                            <Form.Control type='text' placeholder='이름을 입력해주세요' onChange={handleChange} name='studentName'/>\r\n                        </Form.Group>\r\n                        {/* 이름 입력 끝 */}\r\n\r\n                        {/* 파일 선택 시작 */}\r\n                        {/*<Form.Group>*/}\r\n                        {/*    <Form.File label='시험지를 선택해주세요' name='filePath' onChange={handleChange}/>*/}\r\n                        {/*</Form.Group>*/}\r\n                        {/* 파일 선택 끝 */}\r\n                        \r\n                        {/* 로그인 버튼 시작 */}\r\n                        <Button style={{width: '100%', marginTop: '20px'}} onClick={handleRedirect}>\r\n                            다음\r\n                        </Button>\r\n                        {/* 로그인 버튼 끝 */}\r\n                    </div>\r\n                </Form>\r\n            {/* 로그인 정보 끝 */}\r\n            <ErrorModal category={category} show={show} handleClose={handleClose}/>\r\n        </div>\r\n    )\r\n}",["122","123"],"D:\\Gomip\\project\\ElectronJs\\src\\pages\\Exam\\Solve.tsx",["124","125","126","127"],"D:\\Gomip\\project\\ElectronJs\\src\\pages\\Exam\\ErrorModal.tsx",[],"D:\\Gomip\\project\\ElectronJs\\src\\pages\\Exam\\Answer.tsx",["128","129","130","131","132","133","134","135","136","137","138"],"import * as React from 'react'\r\nimport {Button, Tab, Table, Tabs} from \"react-bootstrap\";\r\nimport {RadioBox} from \"./RadioBox\";\r\nimport '../style/Solve.css'\r\nimport {AnswerTable} from './AnswerTable'\r\nimport * as Xlsx from 'xlsx'\r\nimport {saveAs} from 'file-saver'\r\n\r\n/**\r\n *  2021.12.27 | gomip | created\r\n */\r\n\r\nconst {useState, useEffect} = React\r\n\r\ninterface AnswerType {\r\n    listen: [],\r\n    read: [],\r\n    write: []\r\n}\r\n\r\nexport interface AnswerProps{\r\n    studentId: string,\r\n    studentName: string,\r\n}\r\nexport const Answer: React.FC<AnswerProps> = (props) => {\r\n    // State -----------------------------------------------------------------------------------------------------------\r\n    const {studentId, studentName} = props\r\n    const [curTab, setCurTab] = useState('listen')                                                             // 현재 선택된 탭 값\r\n    const [read, setRead] = useState<Map<number, number>>(new Map())\r\n    const [write, setWrite] = useState<Map<number, string>>(new Map())\r\n    const [listen, setListen] = useState<Map<number,number>>(new Map())\r\n    let i = 0\r\n\r\n    const date = new Date()\r\n    const getCurrentDate: string = date.getFullYear() + '.' + (date.getMonth() + 1) + '.' + date.getDate()\r\n    // LifeCycle -------------------------------------------------------------------------------------------------------\r\n    useEffect(() => {\r\n        if (i === 0) {\r\n            for (let j = 1; j <= 100 ; j ++) {\r\n                read.set(j,0)\r\n                write.set(j,'')\r\n                listen.set(j,0)\r\n            }\r\n        }\r\n        i ++\r\n    }, [i])\r\n    // Function --------------------------------------------------------------------------------------------------------\r\n    const handleTabChange = (key?: any) => {                                                                            // 탭 변경\r\n        setCurTab(key)\r\n    }\r\n\r\n    const handleRadioChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.currentTarget\r\n        const modeReg = new RegExp(\"^.*?(?=-)\")                                                                  // 정규식 : - 앞에 단어 가져오기\r\n        let mode = name.match(modeReg)\r\n        const qusReg = new RegExp(\"(?<=-)(\\\\d*)\")                                                                // 정규식 : - 뒤에 숫자 가져오기\r\n        let qusNum = name.match(qusReg)\r\n\r\n        if (mode !== undefined && mode !== null && qusNum !== undefined && qusNum !== null) {\r\n            if (mode[0] === 'listen') {\r\n                listen.set(parseInt(qusNum[0]), parseInt(value))\r\n            } else if (mode [0] === 'read') {\r\n                read.set(parseInt(qusNum[0]), parseInt(value))\r\n            } else if (mode [0] === 'write') {\r\n                write.set(parseInt(qusNum[0]), value)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {                                           // 우측 필터 값 변경\r\n        const {name, value} = e.currentTarget\r\n        const modeReg = new RegExp(\"^.*?(?=-)\")                                                                  // 정규식 : - 앞에 단어 가져오기\r\n        let mode = name.match(modeReg)\r\n        const qusReg = new RegExp(\"(?<=-)(\\\\d*)\")                                                                // 정규식 : - 뒤에 숫자 가져오기\r\n        let qusNum = name.match(qusReg)\r\n\r\n        if (mode !== undefined && mode !== null && qusNum !== undefined && qusNum !== null) {\r\n            if (mode [0] === 'write') {\r\n                write.set(parseInt(qusNum[0]), value)\r\n            }\r\n        }\r\n        console.log('write', write)\r\n    }\r\n\r\n    const convertFile = (item: any) => {\r\n        const buf = new ArrayBuffer(item.length)\r\n        const view = new Uint8Array(buf)\r\n        for (let i =0 ; i<item.length; i++) {\r\n            view[i] = item.charCodeAt(i) & 0xFF\r\n        }\r\n        return buf\r\n    }\r\n\r\n    const handleDownload = () => {                                                                                      // 엑셀 파일 생성\r\n        const promise = new Promise((resolve, reject) => {\r\n            const wb = Xlsx.utils.book_new()\r\n            wb.Props = {\r\n                Title: date.toString(),\r\n                CreatedDate: date,\r\n            }\r\n\r\n            wb.SheetNames.push(\"듣기\")                                                                                   // 듣기 페이지 생성\r\n            let listen_ans: any[] = []\r\n            listen.forEach((value, key,map) => {\r\n                listen_ans.push([key, value])\r\n            })\r\n            console.log(listen_ans)\r\n            wb.Sheets[\"듣기\"] = Xlsx.utils.aoa_to_sheet(listen_ans)\r\n\r\n            wb.SheetNames.push(\"읽기\")                                                                                   // 읽기 페이지 생성\r\n            let read_ans: any[] = []\r\n            read.forEach((value, key,map) => {\r\n                read_ans.push([key, value])\r\n            })\r\n            wb.Sheets[\"읽기\"] = Xlsx.utils.aoa_to_sheet(read_ans)\r\n\r\n            wb.SheetNames.push(\"쓰기\")                                                                                   // 쓰기 페이지 생성\r\n            let write_ans: any[] = []\r\n            write.forEach((value, key,map) => {\r\n                write_ans.push([key, value])\r\n            })\r\n            wb.Sheets[\"쓰기\"] = Xlsx.utils.aoa_to_sheet(write_ans)\r\n\r\n            const wbout = Xlsx.write(wb, {bookType:'xlsx', type: 'binary'})\r\n            saveAs(new Blob([convertFile(wbout)], {type: \"application/octet-stream\"}), studentId+'-'+studentName+\".xlsx\")\r\n        })\r\n        promise.then((items) => {\r\n            console.log('done')\r\n        })\r\n    }\r\n    // Dom -------------------------------------------------------------------------------------------------------------\r\n    return (\r\n        <div>\r\n            {/* 탭 레이아웃 시작 */}\r\n            <Tabs\r\n                id='answer-tab'\r\n                activeKey={curTab}\r\n                onSelect={(key) => handleTabChange(key)}\r\n            >\r\n                {/* 듣기 탭 시작 */}\r\n                <Tab eventKey='listen' title='듣기' className='radio-box' style={{overflow: 'scroll'}}>\r\n                    <AnswerTable\r\n                        mode='listen'\r\n                        handleRadioChange={handleRadioChange}\r\n                    />\r\n                </Tab>\r\n                {/* 듣기 탭 끝 */}\r\n\r\n                {/* 읽기 탭 시작 */}\r\n                <Tab eventKey='read' title='읽기' className='radio-box' style={{overflow: 'scroll'}}>\r\n                    <AnswerTable\r\n                        mode='read'\r\n                        handleRadioChange={handleRadioChange}\r\n                    />\r\n                </Tab>\r\n                {/* 읽기 탭 끝 */}\r\n\r\n                {/* 쓰기 탭 시작 */}\r\n                <Tab eventKey='write' title='쓰기' className='radio-box' style={{overflow: 'scroll'}}>\r\n                    <AnswerTable\r\n                        mode='write'\r\n                        handleRadioChange={handleRadioChange}\r\n                        handleChange={handleChange}\r\n                    />\r\n                </Tab>\r\n                {/* 쓰기 탭 끝끝 */}\r\n\r\n                {/* 제출 탭 시작 */}\r\n                <Tab eventKey='submit' title='제출' className='radio-box'>\r\n                    <div className='submit-box'>\r\n                        <Button\r\n                            type='submit'\r\n                            onClick={handleDownload}\r\n                        >\r\n                            답안지 제출\r\n                        </Button>\r\n                    </div>\r\n                </Tab>\r\n                {/* 제출 탭 끝 */}\r\n            </Tabs>\r\n            {/* 탭 레이아웃 끝 */}\r\n        </div>\r\n    )\r\n}","D:\\Gomip\\project\\ElectronJs\\src\\pages\\Exam\\RadioBox.tsx",[],"D:\\Gomip\\project\\ElectronJs\\src\\pages\\Report\\Report.tsx",[],["139","140"],"D:\\Gomip\\project\\ElectronJs\\src\\pages\\Create\\Quiz.tsx",["141","142"],"D:\\Gomip\\project\\ElectronJs\\src\\pages\\Exam\\AnswerTable.tsx",[],"D:\\Gomip\\project\\ElectronJs\\src\\COM\\style\\Pagination.tsx",["143","144","145"],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":9,"column":9,"nodeType":"152","messageId":"153","endLine":9,"endColumn":13},{"ruleId":"150","severity":1,"message":"154","line":9,"column":15,"nodeType":"152","messageId":"153","endLine":9,"endColumn":26},{"ruleId":"150","severity":1,"message":"155","line":9,"column":28,"nodeType":"152","messageId":"153","endLine":9,"endColumn":36},{"ruleId":"150","severity":1,"message":"156","line":49,"column":9,"nodeType":"152","messageId":"153","endLine":49,"endColumn":24},{"ruleId":"150","severity":1,"message":"157","line":64,"column":21,"nodeType":"152","messageId":"153","endLine":64,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":110,"column":6,"nodeType":"160","endLine":110,"endColumn":20,"suggestions":"161"},{"ruleId":"150","severity":1,"message":"162","line":234,"column":12,"nodeType":"152","messageId":"153","endLine":234,"endColumn":16},{"ruleId":"150","severity":1,"message":"163","line":2,"column":9,"nodeType":"152","messageId":"153","endLine":2,"endColumn":15},{"ruleId":"150","severity":1,"message":"164","line":32,"column":9,"nodeType":"152","messageId":"153","endLine":32,"endColumn":13},{"ruleId":"150","severity":1,"message":"165","line":33,"column":9,"nodeType":"152","messageId":"153","endLine":33,"endColumn":13},{"ruleId":"146","replacedBy":"166"},{"ruleId":"148","replacedBy":"167"},{"ruleId":"146","replacedBy":"168"},{"ruleId":"148","replacedBy":"169"},{"ruleId":"150","severity":1,"message":"170","line":2,"column":13,"nodeType":"152","messageId":"153","endLine":2,"endColumn":20},{"ruleId":"150","severity":1,"message":"171","line":4,"column":13,"nodeType":"152","messageId":"153","endLine":4,"endColumn":20},{"ruleId":"146","replacedBy":"172"},{"ruleId":"148","replacedBy":"173"},{"ruleId":"150","severity":1,"message":"174","line":11,"column":8,"nodeType":"152","messageId":"153","endLine":11,"endColumn":16},{"ruleId":"150","severity":1,"message":"175","line":11,"column":18,"nodeType":"152","messageId":"153","endLine":11,"endColumn":27},{"ruleId":"150","severity":1,"message":"176","line":3,"column":9,"nodeType":"152","messageId":"153","endLine":3,"endColumn":15},{"ruleId":"150","severity":1,"message":"177","line":5,"column":9,"nodeType":"152","messageId":"153","endLine":5,"endColumn":13},{"ruleId":"150","severity":1,"message":"178","line":23,"column":9,"nodeType":"152","messageId":"153","endLine":23,"endColumn":18},{"ruleId":"146","replacedBy":"179"},{"ruleId":"148","replacedBy":"180"},{"ruleId":"150","severity":1,"message":"181","line":3,"column":23,"nodeType":"152","messageId":"153","endLine":3,"endColumn":28},{"ruleId":"150","severity":1,"message":"182","line":32,"column":12,"nodeType":"152","messageId":"153","endLine":32,"endColumn":16},{"ruleId":"150","severity":1,"message":"183","line":32,"column":18,"nodeType":"152","messageId":"153","endLine":32,"endColumn":25},{"ruleId":"146","replacedBy":"184"},{"ruleId":"148","replacedBy":"185"},{"ruleId":"150","severity":1,"message":"186","line":30,"column":12,"nodeType":"152","messageId":"153","endLine":30,"endColumn":20},{"ruleId":"150","severity":1,"message":"187","line":31,"column":12,"nodeType":"152","messageId":"153","endLine":31,"endColumn":21},{"ruleId":"158","severity":1,"message":"188","line":41,"column":8,"nodeType":"160","endLine":41,"endColumn":10,"suggestions":"189"},{"ruleId":"150","severity":1,"message":"162","line":45,"column":16,"nodeType":"152","messageId":"153","endLine":45,"endColumn":20},{"ruleId":"150","severity":1,"message":"190","line":2,"column":22,"nodeType":"152","messageId":"153","endLine":2,"endColumn":27},{"ruleId":"150","severity":1,"message":"191","line":3,"column":9,"nodeType":"152","messageId":"153","endLine":3,"endColumn":17},{"ruleId":"150","severity":1,"message":"192","line":15,"column":11,"nodeType":"152","messageId":"153","endLine":15,"endColumn":21},{"ruleId":"150","severity":1,"message":"193","line":29,"column":18,"nodeType":"152","messageId":"153","endLine":29,"endColumn":25},{"ruleId":"150","severity":1,"message":"194","line":30,"column":19,"nodeType":"152","messageId":"153","endLine":30,"endColumn":27},{"ruleId":"150","severity":1,"message":"195","line":31,"column":20,"nodeType":"152","messageId":"153","endLine":31,"endColumn":29},{"ruleId":"150","severity":1,"message":"196","line":35,"column":11,"nodeType":"152","messageId":"153","endLine":35,"endColumn":33},{"ruleId":"158","severity":1,"message":"197","line":46,"column":8,"nodeType":"160","endLine":46,"endColumn":11,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":62,"column":24,"nodeType":"201","messageId":"202","endLine":62,"endColumn":32,"fix":"203"},{"ruleId":"199","severity":1,"message":"200","line":64,"column":24,"nodeType":"201","messageId":"202","endLine":64,"endColumn":32,"fix":"204"},{"ruleId":"199","severity":1,"message":"200","line":78,"column":17,"nodeType":"201","messageId":"202","endLine":78,"endColumn":25,"fix":"205"},{"ruleId":"146","replacedBy":"206"},{"ruleId":"148","replacedBy":"207"},{"ruleId":"150","severity":1,"message":"174","line":16,"column":8,"nodeType":"152","messageId":"153","endLine":16,"endColumn":16},{"ruleId":"150","severity":1,"message":"208","line":18,"column":11,"nodeType":"152","messageId":"153","endLine":18,"endColumn":22},{"ruleId":"150","severity":1,"message":"175","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":17},{"ruleId":"150","severity":1,"message":"174","line":6,"column":19,"nodeType":"152","messageId":"153","endLine":6,"endColumn":27},{"ruleId":"209","severity":1,"message":"210","line":37,"column":25,"nodeType":"211","endLine":37,"endColumn":92},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'Redirect' is defined but never used.","'init' is assigned a value but never used.","'setExcelList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'excelList'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setListenList' needs the current value of 'excelList'.","ArrayExpression",["214"],"'name' is assigned a value but never used.","'Button' is defined but never used.","'next' is assigned a value but never used.","'prev' is assigned a value but never used.",["212"],["213"],["212"],["213"],"'FaIcons' is defined but never used.","'IoIcons' is defined but never used.",["212"],["213"],"'useState' is assigned a value but never used.","'useEffect' is assigned a value but never used.","'NavBar' is defined but never used.","'Home' is defined but never used.","'handleBpd' is assigned a value but never used.",["212"],["213"],"'Modal' is defined but never used.","'exam' is assigned a value but never used.","'setExam' is assigned a value but never used.",["212"],["213"],"'filePath' is assigned a value but never used.","'totalPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.state.student.studentId' and 'location.state.student.studentName'. Either include them or remove the dependency array.",["215"],"'Table' is defined but never used.","'RadioBox' is defined but never used.","'AnswerType' is defined but never used.","'setRead' is assigned a value but never used.","'setWrite' is assigned a value but never used.","'setListen' is assigned a value but never used.","'getCurrentDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'listen', 'read', and 'write'. Either include them or remove the dependency array.",["216"],"no-whitespace-before-property","Unexpected whitespace before property 0.","MemberExpression","unexpectedWhitespace",{"range":"217","text":"218"},{"range":"219","text":"218"},{"range":"220","text":"218"},["212"],["213"],"'AnswerSheet' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},[2595,2596],"",[2706,2707],[3462,3463],"Update the dependencies array to be: [excelList, fileSelected]",{"range":"227","text":"228"},"Update the dependencies array to be: [location.state.student.studentId, location.state.student.studentName]",{"range":"229","text":"230"},"Update the dependencies array to be: [i, listen, read, write]",{"range":"231","text":"232"},[4691,4705],"[excelList, fileSelected]",[1414,1416],"[location.state.student.studentId, location.state.student.studentName]",[1594,1597],"[i, listen, read, write]"]